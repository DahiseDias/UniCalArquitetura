@startuml
!include https://raw.githubusercontent.com/adrianvlupu/C4-PlantUML/latest/C4_Container.puml

LAYOUT_WITH_LEGEND()
LAYOUT_LEFT_RIGHT()
skinparam backgroundcolor transparent
skinparam ArrowFontColor lightGray
skinparam ArrowColor lightGray

Container(api, "API", "Java(SpringBoot)", "Contém a lógica do sistema e de comunição com o banco de dados")
System_Ext(gAuth, "Google Authentication API", "API para autenticação, login e cadastro")
System_Ext(Expo, "Expo", "Ferramenta utilizada no desenvolvimento mobile que permite acesso as diversas APIs desenvolvidas pelo expo.com")
Container_Boundary(mobileApp, "Mobile App"){
    Container(appContext, "App Context", "Component: Context API", "Responsável por gerenciar, centralizar e compartilhar todos os serviços entre as telas. Também é responsável pela inicialização do aplicativo, comunicar-se com a API de autenticação do google, armazenar o estado do usuário, preencher o calendário de eventos e chamar serviços para atualização de dados.")
    Container(courseService, "Course Service", "Component: NodeJS HTTP Client", "Conecta-se à API para obter informações dos cursos")
    Container(eventService, "Event Service", "Component: NodeJS HTTP Client", "Conecta-se à API e gerencia informações de eventos (CRUD)")
    Container(NotificationService, "Notification Service", "Component: NodeJS HTTP Client", "Conecta-se à API para obter informações de notificação")
    Container(userService, "User Service", "Component: NodeJS HTTP Client", "Conecta com a API enviando e recebendo dados do usuario")

    Container(screens, "Telas", "Component: React Native JSX Views", "Contém as telas da aplicação, a interface grafica do sistema")
    Container(components, "Componentes", "Component: React Native JSX", "Contém os componentes que formam as telas do sistema")

    Rel(appContext, eventService, "Usa")
    Rel(appContext, courseService, "Usa")
    Rel(appContext, NotificationService, "Usa")
    Rel(appContext, userService, "Usa")
    Rel(screens, components, "Usa")
    Rel(screens, appContext, "Usa")

    Rel(courseService, api, "Faz uma requisição a", "JSON/HTTP")
    Rel(eventService, api, "Faz uma requisição a", "JSON/HTTP")
    Rel(NotificationService, api, "Faz uma requisição a", "JSON/HTTP")
    Rel(userService, api, "Faz uma requisição a", "JSON/HTTP")
    Rel(appContext, gAuth, "Usa")
    Rel(mobileApp, Expo, "Usa")

}


@enduml